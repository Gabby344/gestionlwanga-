<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Liste des √âl√®ves - Institut Saint Charles Lwanga (SIGS)</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
  <style>
    :root {
      --bleu-fonce: #1e40af; /* Principal */
      --gris-fonce: #1f2937;
      --vert-action: #10b981; /* Statut Pay√© */
      --orange-alerte: #f59e0b; /* Statut Partiel */
      --rouge-danger: #ef4444; /* Statut Non Pay√© / Supprimer */
      --fond-principal: #f4f6f8;
      --ombre-legere: rgba(0,0,0,0.08);
      --indigo-secondaire: #4f46e5; /* Bouton Modifier */
    }
    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--fond-principal);
      margin: 0;
      padding: 2rem 1rem;
      color: var(--gris-fonce);
    }
    h1 {
      text-align: center;
      font-size: 1.8rem;
      color: var(--bleu-fonce);
      margin-bottom: 0.5rem;
    }
    h2 {
      text-align: center;
      font-size: 1rem;
      font-weight: normal;
      color: #6b7280;
      margin-bottom: 2rem;
    }
    .container {
        max-width: 1300px;
        margin: auto;
    }

    /* --- BARRE DE CONTR√îLE ET FILTRES --- */
    .controls-bar {
        background-color: white;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px var(--ombre-legere);
        margin-bottom: 1.5rem;
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr;
    }
    @media (min-width: 600px) {
        .controls-bar {
            grid-template-columns: 2fr 1fr 1fr 150px; /* Mise en page desktop */
            align-items: center;
        }
    }
    .input-group label {
        display: block;
        font-size: 0.8rem;
        font-weight: 600;
        color: #6b7280;
        margin-bottom: 0.2rem;
    }
    .input-group select, .input-group input[type="text"] {
        width: 100%;
        padding: 0.6rem;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        box-sizing: border-box;
    }
    .btn-ajouter-eleve {
        padding: 0.75rem 1rem;
        border: none;
        border-radius: 4px;
        font-weight: 600;
        cursor: pointer;
        background-color: var(--vert-action);
        color: white;
        text-decoration: none;
        display: block;
        text-align: center;
    }
    .btn-ajouter-eleve:hover { background-color: #059669; }

    /* --- COMPTEUR ET R√âSUM√â --- */
    #compteur {
      grid-column: 1 / -1;
      font-weight: 700;
      font-size: 0.9rem;
      text-align: left;
      color: var(--bleu-fonce);
      padding-top: 0.5rem;
    }

    /* --- TABLEAU DE DONN√âES --- */
    #elevesContainer {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 10px var(--ombre-legere);
        overflow-x: auto; /* Permet le d√©filement horizontal sur mobile */
    }

    /* VUE TABLEAU (DESKTOP) */
    .eleves-table {
        width: 100%;
        border-collapse: collapse;
        display: none; /* Cach√© par d√©faut */
        min-width: 800px; /* Force l'√©largissement si n√©cessaire */
    }
    @media (min-width: 768px) {
        .eleves-table {
            display: table; /* Affich√© sur desktop */
        }
        th, td {
            padding: 0.75rem 1rem;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }
        th {
            background-color: #f3f4f6;
            color: var(--gris-fonce);
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
        }
        td.statut-paye { color: var(--vert-action); font-weight: 600; }
        td.statut-partiel { color: var(--orange-alerte); font-weight: 600; }
        td.statut-non-paye { color: var(--rouge-danger); font-weight: 600; }
        .actions-cell { width: 120px; text-align: center; }
        .btn-modifier, .btn-profil {
            border: none;
            padding: 0.5rem 0.6rem;
            border-radius: 4px;
            font-size: 0.8rem;
            cursor: pointer;
            color: white;
            margin-right: 0.3rem;
        }
        .btn-modifier { background-color: var(--indigo-secondaire); }
        .btn-profil { background-color: var(--bleu-fonce); }
    }
    
    /* VUE CARTE (MOBILE) */
    .eleve-card {
        padding: 1rem;
        border-bottom: 1px solid #e5e7eb;
        display: block;
    }
    @media (min-width: 768px) {
        .eleve-card { display: none; } /* Cacher les cartes sur desktop */
    }
    .eleve-card h3 {
      margin: 0 0 0.5rem 0;
      font-size: 1.1rem;
      color: var(--bleu-fonce);
    }
    .eleve-card p {
      margin: 0.25rem 0;
      font-size: 0.9rem;
    }
    .actions-card {
        margin-top: 0.75rem;
        display: flex;
        gap: 0.5rem;
    }

    /* Bouton de retour */
    .btn-retour {
        display: block;
        text-align: center;
        margin-top: 1.5rem;
        color: var(--gris-fonce);
        text-decoration: none;
        font-size: 0.9rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>üìö Gestion des Dossiers √âl√®ves</h1>
    <h2>Liste compl√®te, filtres rapides et acc√®s aux profils d√©taill√©s.</h2>

    <div class="controls-bar">
        <div class="input-group">
            <label for="searchInput">Recherche Rapide</label>
            <input type="text" id="searchInput" placeholder="Nom, Pr√©nom ou Matricule..." oninput="filterEleves()" />
        </div>
        <div class="input-group">
            <label for="filtreClasse">Filtrer par Classe</label>
            <select id="filtreClasse" onchange="filterEleves()">
                <option value="">Toutes les classes</option>
                <option value="6A">6√®me Commerciale A</option>
                <option value="5S">5√®me Scientifique</option>
                <option value="4H">4√®me Humanit√©s</option>
            </select>
        </div>
        <div class="input-group">
            <label for="filtrePaiement">Statut Paiement</label>
            <select id="filtrePaiement" onchange="filterEleves()">
                <option value="">Tous les statuts</option>
                <option value="Pay√©">Pay√©</option>
                <option value="Partiel">Partiel</option>
                <option value="Non pay√©">Non pay√©</option>
            </select>
        </div>
        
        <a href="ajouter-eleve.html" class="btn-ajouter-eleve">‚ûï Nouvel √âl√®ve</a>

        <p id="compteur" style="grid-column: 1 / -1;">Chargement des donn√©es...</p>
    </div>

    <div id="elevesContainer">
        </div>

    <a href="dashboard.html" class="btn-retour">‚Üê Retour au Tableau de Bord</a>
  </div>


  <script>
    // --- SIMULATION DE DONN√âES (Ceci proviendrait de Firebase/Backend) ---
    const initialData = [
        { id: '1', matricule: '25/6A-101', nom: 'Umba', prenom: 'Gabby', classe: '6A', statut: 'Pay√©' },
        { id: '2', matricule: '25/5S-102', nom: 'Kabulo', prenom: 'Ndaya', classe: '5S', statut: 'Partiel' },
        { id: '3', matricule: '25/6A-103', nom: 'Mutombo', prenom: 'Kalubi', classe: '6A', statut: 'Non pay√©' },
        { id: '4', matricule: '25/4H-104', nom: 'Kasongo', prenom: 'Tshibola', classe: '4H', statut: 'Pay√©' },
        { id: '5', matricule: '25/5S-105', nom: 'Lukusa', prenom: 'Benoit', classe: '5S', statut: 'Pay√©' },
    ];
    
    // Fonction de mapping pour afficher le nom complet de la classe
    function getClasseNom(code) {
        const classes = {
            '6A': '6√®me Commerciale A',
            '5S': '5√®me Scientifique',
            '4H': '4√®me Humanit√©s',
        };
        return classes[code] || code;
    }
    
    function getStatutClass(statut) {
        if (statut === 'Pay√©') return 'statut-paye';
        if (statut === 'Partiel') return 'statut-partiel';
        return 'statut-non-paye';
    }

    function filterEleves() {
      const container = document.getElementById('elevesContainer');
      const recherche = document.getElementById('searchInput').value.toLowerCase();
      const classeFiltre = document.getElementById('filtreClasse').value;
      const paiementFiltre = document.getElementById('filtrePaiement').value;
      
      const filteredEleves = initialData.filter(e => {
          const nomComplet = (e.nom + ' ' + e.prenom + ' ' + e.matricule).toLowerCase();
          
          const searchMatch = nomComplet.includes(recherche);
          const classeMatch = !classeFiltre || e.classe === classeFiltre;
          const paiementMatch = !paiementFiltre || e.statut === paiementFiltre;

          return searchMatch && classeMatch && paiementMatch;
      });

      renderEleves(filteredEleves);
      
      document.getElementById('compteur').textContent = `üìä ${filteredEleves.length} √©l√®ves affich√©s sur ${initialData.length} au total.`;
    }

    function renderEleves(data) {
        if (data.length === 0) {
            document.getElementById('elevesContainer').innerHTML = "<p style='text-align: center; padding: 3rem;'>Aucun √©l√®ve trouv√© selon les crit√®res de filtre.</p>";
            return;
        }

        let tableHTML = `<table class="eleves-table">
                            <thead>
                                <tr>
                                    <th>Matricule</th>
                                    <th>Nom et Pr√©nom</th>
                                    <th>Classe</th>
                                    <th>Statut Paiement</th>
                                    <th class="actions-cell">Actions</th>
                                </tr>
                            </thead>
                            <tbody>`;
        let cardsHTML = '';

        data.forEach(e => {
            const statutClass = getStatutClass(e.statut);
            const classeNom = getClasseNom(e.classe);

            // 1. Vue Tableau (Desktop)
            tableHTML += `
                <tr>
                    <td>${e.matricule}</td>
                    <td>${e.nom.toUpperCase()} ${e.prenom}</td>
                    <td>${classeNom}</td>
                    <td class="${statutClass}">${e.statut}</td>
                    <td class="actions-cell">
                        <button class="btn-profil" onclick="viewProfil('${e.id}')">üëÅÔ∏è Profil</button>
                        <button class="btn-modifier" onclick="editEleve('${e.id}')">‚úèÔ∏è</button>
                    </td>
                </tr>
            `;
            
            // 2. Vue Carte (Mobile)
            cardsHTML += `
                <div class="eleve-card">
                    <h3>${e.nom.toUpperCase()} ${e.prenom} <span style="font-weight: 400; font-size: 0.8rem; color: #6b7280;">(${e.matricule})</span></h3>
                    <p>Classe: <strong>${classeNom}</strong></p>
                    <p>Paiement: <strong class="${statutClass}">${e.statut}</strong></p>
                    <div class="actions-card">
                        <button class="btn-profil" style="flex: 1; background-color: var(--bleu-fonce);" onclick="viewProfil('${e.id}')">üëÅÔ∏è Voir Profil</button>
                        <button class="btn-modifier" style="flex: 1; background-color: var(--indigo-secondaire);" onclick="editEleve('${e.id}')">‚úèÔ∏è Modifier</button>
                    </div>
                </div>
            `;
        });
        
        tableHTML += `</tbody></table>`;
        container.innerHTML = tableHTML + cardsHTML;
    }

    function viewProfil(id) {
        alert(`Redirection vers la page de profil d√©taill√©e de l'√©l√®ve ID: ${id}`);
        // En vrai: window.location.href = `profil-eleve.html?id=${id}`;
    }

    function editEleve(id) {
        alert(`Redirection vers la page de modification de l'√©l√®ve ID: ${id}`);
        // En vrai: window.location.href = `modifier-eleve.html?id=${id}`;
    }
    
    // Chargement initial au d√©marrage
    document.addEventListener('DOMContentLoaded', () => {
        filterEleves();
    });

  </script>
</body>
</html>
